// <auto-generated />
using System;
using DataloaderApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataloaderApi.Migrations
{
    [DbContext(typeof(Applicationcontext))]
    [Migration("20250221115543_CreatedRefreshToken")]
    partial class CreatedRefreshToken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataloaderApi.Data.CrimeData", b =>
                {
                    b.Property<int>("DR_NO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DR_NO"));

                    b.Property<int?>("AREA")
                        .HasColumnType("int");

                    b.Property<string>("AREANAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CrmCd")
                        .HasColumnType("int");

                    b.Property<int?>("CrmCd1")
                        .HasColumnType("int");

                    b.Property<int?>("CrmCd2")
                        .HasColumnType("int");

                    b.Property<string>("CrmCd3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CrmCd4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CrmCdDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CrossStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DATEOCC")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRptd")
                        .HasColumnType("datetime2");

                    b.Property<double?>("LAT")
                        .HasColumnType("float");

                    b.Property<string>("LOCATION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("LON")
                        .HasColumnType("float");

                    b.Property<string>("Mocodes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Part1_2")
                        .HasColumnType("int");

                    b.Property<int?>("PremisCd")
                        .HasColumnType("int");

                    b.Property<string>("PremisDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RptDistNo")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TIMEOCC")
                        .HasColumnType("int");

                    b.Property<int?>("VictAge")
                        .HasColumnType("int");

                    b.Property<string>("VictDescent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VictSex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponUsedCd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DR_NO");

                    b.ToTable("CrimeData");
                });

            modelBuilder.Entity("DataloaderApi.Data.Customers", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneTwo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubscriptionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DataloaderApi.Data.Organizations", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Founded")
                        .HasColumnType("int");

                    b.Property<string>("Industry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfEmployes")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("DataloaderApi.Data.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderDemand")
                        .HasColumnType("int");

                    b.Property<string>("ProductCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Warehouse")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DataloaderApi.Data.RefreshToken", b =>
                {
                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("enabled")
                        .HasColumnType("bit");

                    b.HasKey("Token");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("DataloaderApi.Data.Tables", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("DataloaderApi.Data.User", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = "Admin",
                            Password = "$2a$11$0WZaQI.t68SRP7sBnBKFYe5mKMgLuLDQ2CyI5FnZWhBFVO/xRO6qS",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("DataloaderApi.Data.RefreshToken", b =>
                {
                    b.HasOne("DataloaderApi.Data.User", "User")
                        .WithOne("RefreshToken")
                        .HasForeignKey("DataloaderApi.Data.RefreshToken", "Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataloaderApi.Data.User", b =>
                {
                    b.Navigation("RefreshToken")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
